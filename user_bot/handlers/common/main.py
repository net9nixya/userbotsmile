from asyncio import sleep
from random import choice
import sqlite3

from pyrogram import Client
from pyrogram.handlers import MessageHandler
from pyrogram.types import Message
from pyrogram.types import Message

from misc.html_tags import b
from user_bot.filters import get_filter
from user_bot.handlers.common.games import _get_game_handlers
from user_bot.utils import cmd, play_anim
from user_bot.handlers.common.stickers import _get_sticker_handlers
from user_bot.handlers.common.texts import _get_text_handlers


@cmd()
async def __night(app, msg: Message):
    sleep_words = (
        '–∑–∞–π–∫–∞ üíö', '—Å–æ–ª–Ω—ã—à–∫–æ üíõ', '–∫–æ—Ç—ë–Ω–æ–∫ ‚ù§', '—Ü–≤–µ—Ç–æ—á–µ–∫ üíô', '–∞–Ω–≥–µ–ª–æ—á–µ–∫ üíú', '–ø—Ä–∏–Ω—Ü–µ—Å—Å–∞ üíì',
        '–∫—Ä–∞—Å–æ—Ç–∫–∞ üíï', '–º–∏–ª–∞—à–∫–∞ üíñ', '—Å–∏–º–ø–∞—Ç—è–∂–∫–∞ üíó', '–±—É—Å–∏–Ω–∫–∞ üíò',
    )
    love_words = (
        '‚ù§ —è ‚ù§', 'üíö —Ç–µ–±—è üíö', 'üíô –æ—á–µ–Ω—å üíô', 'üíõ —Å–∏–ª—å–Ω–æ üíõ', 'üíú –ª—é–±–ª—é üíú',
    )
    for word in sleep_words:
        await msg.edit(b(f'C–ø–æ–∫–æ–π–Ω–æ–π –Ω–æ—á–∏ {word}'))
        await sleep(0.5)
    for word in love_words:
        await msg.edit(b(word))
        await sleep(0.5)


@cmd(True)
async def __bombs(app: Client, msg: Message):
    row = '‚ñ™Ô∏è‚ñ™Ô∏è‚ñ™Ô∏è‚ñ™Ô∏è\n'
    bombs = 'üí£ üí£ üí£ üí£\n'
    fire = 'üí• üí• üí• üí•\n'
    smile = 'üòµ üòµ üòµ üòµ\n'
    words = (
        f"{row}{row}{row}{row}{row}",
        f"{bombs}{row}{row}{row}{row}",
        f"{row}{bombs}{row}{row}{row}",
        f"{row}{row}{bombs}{row}{row}",
        f"{row}{row}{row}{bombs}{row}",
        f"{row}{row}{row}{row}{bombs}",
        f"{row}{row}{row}{row}{fire}",
        f"{row}{row}{row}{fire}{fire}",
        f"{row}{row}{row}{row}{smile}"
    )
    await play_anim(msg, words)


@cmd(True)
async def __stupid(app: Client, msg: Message):
    first_str = '–¢–í–û–ô –ú–û–ó–ì ‚û°Ô∏è üß†\n\nüß†'
    second_str = '–¢–í–û–ô –ú–û–ó–ì ‚û°Ô∏è üß†\n\n'
    words = (
        f'{first_str}         (^_^)üóë',
        f'{first_str}       (^_^)  üóë',
        f'{first_str}     (^_^)    üóë',
        f'{first_str}   (^_^)      üóë',
        f'{first_str} (^_^)        üóë',
        f'{first_str} <(^_^ <)     üóë',
        f'{second_str}(> ^_^)>üß†   üóë',
        f'{second_str} (> ^_^)>üß†  üóë',
        f'{second_str}  (> ^_^)>üß† üóë',
        f'{second_str}   (> ^_^)>üß†üóë',
        f'{second_str}       (^_^) üóë',
        f'{second_str}        (3_3)üóë'
    )
    await play_anim(msg, words)
    
    
@cmd()
async def __pidor(app: Client, msg: Message):
    words = (
        '–µ–±–∞–Ω—É—Ç—ã–π', '–∫–æ–Ω—á–µ–Ω—ã–π', '–≥–æ–≤–Ω–∏—Å—Ç—ã–π', '—Ç—É–ø–æ–π', '–≥–µ–π', '–¥–∞–ª–±–∞–µ–±', '—É–µ–±–æ–∫', '–ø–∏–¥–æ—Ä–∞—Å',
        '–ø–∏–∑–¥—é—á–µ–ª–æ–≤—Å–∫–∏–π', '—Ö—É–µ–≤—ã–π', '–¥–∞—É–Ω—Å–∫–∏–π', '—à–∞–ª–∞–≤–∏–Ω—Å–∫–∏–π', '–∂–∏—Ä–Ω—ã–π', '–ø–∏–∑–¥–æ—Å–Ω—ã–π', '–ø–∏–¥–æ—Ä—Å–∫–∏–π',
    )
    await msg.edit('<b>–ö—Ä–æ—à–µ—á–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã –¥–∞–ª–±–∞–µ–±...</b>')
    await sleep(1)

    for word in words:
        await msg.edit(b(f'C–∞–º—ã–π {word}üòµ‚Äçüí´'))
        await sleep(0.5)
    await msg.edit(b(f'C–∞–º—ã–π {choice(words)}üíÄ'))


@cmd()
async def __compli(app: Client, msg: Message):
    words = (
        '—É–¥–∏–≤–∏—Ç–µ–ª—å–Ω–∞—è', '–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è', '–∫—Ä–∞—Å–∏–≤–∞—è', '–ª—É—á—à–∞—è', '—É—Å–ø–µ—à–Ω–∞—è', '–∑–∞–±–æ—Ç–ª–∏–≤–∞—è', '–º–∏–ª–∞—è', '–ø—Ä–µ–∫—Ä–∞—Å–Ω–∞—è',
        '—É–º–Ω–∞—è', '—à–∏–∫–∞—Ä–Ω–∞—è', '–æ–±–∞–ª–¥–µ–Ω–Ω–∞—è', '–æ—á–∞—Ä–æ–≤–∞—à–∫–∞', '–ª—é–±–∏–º–∞—è', '–≤–µ—Å—ë–ª–∞—è', '–Ω–µ–∂–Ω–∞—è', '—è—Ä–∫–∞—è', '–ø—Ä–µ–ª–µ—Å—Ç–Ω–∞—è',
        '–ø—Ä–∏—è—Ç–Ω–∞—è', '—Å–ª–∞–¥–∫–∞—è', '–¥–∏–≤–Ω–∞—è', '–∞–Ω–≥–µ–ª—å—Å–∫–∞—è', '–¥–æ–±—Ä–∞—è', '–±–µ—Å–ø–æ–¥–æ–±–Ω–∞—è', '–≤–æ–ª—à–µ–±–Ω–∞—è', '–∫—Ä—É—Ç—ã—à–∫–∞', '—Å–º–µ–ª–∞—è',
        '–ª–∞—Å–∫–æ–≤–∞—è', '—Ä–æ–º–∞–Ω—Ç–∏—á–Ω–∞—è', '–≤–µ–ª–∏–∫–æ–ª–µ–ø–Ω–∞—è', '–≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–∞—è', '—Å—Ç—Ä–∞—Å—Ç–Ω–∞—è', '–∏–≥—Ä–∏–≤–∞—è', '–µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–∞—è',
        '—Å—Ç—Ä–æ–π–Ω–∞—è', '–±–µ–∑—É–º–Ω–∞—è', '—Å–∏–º–ø–∞—Ç–∏—á–Ω–∞—è', '–∏–∑—è—â–Ω–∞—è', '—Ç–∞–ª–∞–Ω—Ç–ª–∏–≤–∞—è', '—ç–ª–µ–≥–∞–Ω—Ç–Ω–∞—è', '—á—É—Ç–∫–∞—è', '—É–Ω–∏–∫–∞–ª—å–Ω–∞—è',
    )
    await msg.edit('<b>–ö—Ä–æ—à–µ—á–Ω—ã–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è —Ç–æ–≥–æ, —á—Ç–æ —Ç—ã...</b>')
    await sleep(1)

    for word in words:
        await msg.edit(b(f'C–∞–º–∞—è {word}‚ú®'))
        await sleep(0.5)
    await msg.edit(b(f'C–∞–º–∞—è {choice(words)}‚ú®'))
    
    
@cmd()
async def __naxyi(app, msg: Message):
    text = ''
    total = '–ü–æ—à—ë–ª –Ω–∞—Ö—É–π —á—É–¥–∞–∫ –µ–±–∞–Ω—ã–π'
    for char in total:
        text += char
        if char == ' ':
            continue
        await msg.edit(b(text))
        await sleep(0.1)


@cmd()
async def __bagger_fast(app, msg: Message):
    text = ''
    total = 'Pyth–æn –ò–ú–ë–ê, Pyth–æn –ï–î–ò–ù. –ò –ù–µ–±–µ—Å–Ω—ã–π –Ω–µ–ø–æ–±–µ–¥–∏–º!!!'
    for char in total:
        text += char
        if char == ' ':
            continue
        await msg.edit(b(text))
        await sleep(0.1)
        
        
import sqlite3

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db_path = "user_prefixes.db"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
def create_table():
    conn = sqlite3.connect(db_path)
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS prefixes
                 (user_id INTEGER PRIMARY KEY, prefix TEXT)''')
    conn.commit()
    conn.close()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_prefix(user_id):
    conn = sqlite3.connect(db_path)
    c = conn.cursor()
    c.execute('SELECT prefix FROM prefixes WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    conn.close()
    return result[0] if result else "-"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def set_prefix(user_id, prefix):
    conn = sqlite3.connect(db_path)
    c = conn.cursor()
    c.execute('REPLACE INTO prefixes (user_id, prefix) VALUES (?, ?)', (user_id, prefix))
    conn.commit()
    conn.close()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
create_table()

@cmd()
async def __prefix(app: Client, msg: Message):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    prefix = msg.text.split()[1:]  # –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ .–ø—Ä–µ—Ñ–∏–∫—Å
    if prefix:
        prefix = prefix[0]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 7 —Å–∏–º–≤–æ–ª–æ–≤
        if len(prefix) > 7:
            await msg.reply("–û—à–∏–±–∫–∞! –ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 7 —Å–∏–º–≤–æ–ª–æ–≤.")
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        set_prefix(msg.from_user.id, prefix)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–µ—Ñ–∏–∫—Å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
        await msg.reply(f"–ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {prefix}")
    else:
        await msg.reply("–û—à–∏–±–∫–∞! –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.")

import sqlite3
from pyrogram.handlers import MessageHandler

import sqlite3

# –ü—É—Ç—å –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
db_path = "user_prefixes.db"

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
def create_table():
    conn = sqlite3.connect(db_path)
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS prefixes
                 (user_id INTEGER PRIMARY KEY, prefix TEXT)''')
    conn.commit()
    conn.close()

# –ü–æ–ª—É—á–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def get_prefix(user_id):
    conn = sqlite3.connect(db_path)
    c = conn.cursor()
    c.execute('SELECT prefix FROM prefixes WHERE user_id = ?', (user_id,))
    result = c.fetchone()
    conn.close()
    return result[0] if result else "-"

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–µ—Ñ–∏–∫—Å–∞ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def set_prefix(user_id, prefix):
    conn = sqlite3.connect(db_path)
    c = conn.cursor()
    c.execute('REPLACE INTO prefixes (user_id, prefix) VALUES (?, ?)', (user_id, prefix))
    conn.commit()
    conn.close()

# –°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
create_table()

@cmd()
async def __prefix(app: Client, msg: Message):
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    prefix = msg.text.split()[1:]  # –°—á–∏—Ç—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –ø–æ—Å–ª–µ .–ø—Ä–µ—Ñ–∏–∫—Å
    if prefix:
        prefix = prefix[0]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –¥–ª–∏–Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–≤—ã—à–∞–µ—Ç 7 —Å–∏–º–≤–æ–ª–æ–≤
        if len(prefix) > 7:
            await msg.reply("–û—à–∏–±–∫–∞! –ü—Ä–µ—Ñ–∏–∫—Å –Ω–µ –¥–æ–ª–∂–µ–Ω –ø—Ä–µ–≤—ã—à–∞—Ç—å 7 —Å–∏–º–≤–æ–ª–æ–≤.")
            return
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        set_prefix(msg.from_user.id, prefix)
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –æ —Ç–æ–º, —á—Ç–æ –ø—Ä–µ—Ñ–∏–∫—Å –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω
        await msg.reply(f"–ü—Ä–µ—Ñ–∏–∫—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω –Ω–∞: {prefix}")
    else:
        await msg.reply("–û—à–∏–±–∫–∞! –í—ã –Ω–µ —É–∫–∞–∑–∞–ª–∏ –Ω–æ–≤—ã–π –ø—Ä–µ—Ñ–∏–∫—Å.")
        
        
        
from pyrogram import Client
from pyrogram.types import Message

@cmd()
async def __help(app: Client, msg: Message):
    help_text = (
        '<a href="https://graph.org/Komandy-yuzer-bota-Lysyj-04-06">–í—Å–µ –∫–æ–º–∞–Ω–¥—ã —é–∑–µ—Ä –±–æ—Ç–∞</a> <i>(–ö–ª–∏–∫–∞–±–µ–ª—å–Ω–æ)</i>'
    )

    photo_path = "images/actions/journey/magic-forest/7.png"

    # –£–¥–∞–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (.help)
    await msg.delete()

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Ñ–æ—Ç–æ —Å –ø–æ–¥–ø–∏—Å—å—é
    await app.send_photo(
        chat_id=msg.chat.id,
        photo=photo_path,
        caption=help_text
    )



@cmd()
async def __info(app: Client, msg: Message):
    # –ü–æ–ª—É—á–∞–µ–º –ø—Ä–µ—Ñ–∏–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    prefix = get_prefix(msg.from_user.id)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
    info_text = (
        "<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —é–∑–µ—Ä –±–æ—Ç–µ:</b>\n\n"
        f"–≠—Ç–æ—Ç –±–æ—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ä–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã—Ö —Ü–µ–ª–µ–π.\n"
        f"–û–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–æ –∫–æ–º–∞–Ω–¥ –∏ —Ñ—É–Ω–∫—Ü–∏–π.\n"
        f"–ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –≤ –ª–∏—á–∫–µ –±–æ—Ç–∞.\n\n"
        f"<b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:</b>\n"
        f"–ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: <b>–¥–∞</b>\n"
        f"–ü—Ä–µ—Ñ–∏–∫—Å: <i>¬´{prefix}¬ª</i>\n"
        f"–ù–∏–∫–Ω–µ–π–º: <i>@{msg.from_user.username}</i>\n"
        f"–¢–µ–ª–µ–≥—Ä–∞–º ID: <i>{msg.from_user.id}</i>\n\n"
        f"<a href='https://graph.org/Komandy-yuzer-bota-Lysyj-04-06'>–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥</a> <i>(–ö–ª–∏–∫–∞–±–µ–ª—å–Ω–æ)</i>\n\n"
        f"–ê–≤—Ç–æ—Ä –±–æ—Ç–∞: <i>–ù–µ–±–µ—Å–Ω—ã–π</i>\n"
        f"UUID: <i>–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>\n"
        f"–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: <i>1.0</i>\n"
        f"–î–∞—Ç–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: <i>2025-04-06</i>"
    )
    
    # –ü—É—Ç—å –¥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    photo_path = "images/actions/journey/magic-forest/4.png"
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
    await msg.reply_photo(photo=photo_path, caption=info_text)
    
@cmd()
async def __get(app: Client, msg: Message):
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if msg.reply_to_message:
        replied_user = msg.reply_to_message.from_user  # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–∞ —á—å–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∏–ª–∏
        user_name = replied_user.username if replied_user.username else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        first_name = replied_user.first_name if replied_user.first_name else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        last_name = replied_user.last_name if replied_user.last_name else "–ù–µ —É–∫–∞–∑–∞–Ω–æ"
        user_id = replied_user.id
        account_creation_date = "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"  # –ù–µ –º–æ–∂–µ–º –ø–æ–ª—É—á–∏—Ç—å —Ç–æ—á–Ω—É—é –¥–∞—Ç—É, –º–æ–∂–Ω–æ –∏–∑–≤–ª–µ—á—å –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –ø–æ–¥—Ö–æ–¥—ã
        avatar = "–ï—Å—Ç—å" if replied_user.photo else "–ù–µ—Ç"
        premium = "–î–∞" if replied_user.is_premium else "–ù–µ—Ç"
        is_bot = "–î–∞" if replied_user.is_bot else "–ù–µ—Ç"
        
        # –ß–µ–∫–∞–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –∞–∫–∫–∞—É–Ω—Ç –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–º
        official_account = "–î–∞" if replied_user.username and replied_user.is_bot else "–ù–µ—Ç"  # –ü—Ä–∏–º–µ—Ä–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞

        info_text = (
            f"üëÅ–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ {first_name} {last_name} ({user_name})\n\n"
            f"‚úèÔ∏è–ò–º—è: {first_name}\n"
            f"üìù–§–∞–º–∏–ª–∏—è: {last_name}\n"
            f"üë§–Æ–∑–µ—Ä–Ω–µ–π–º: @{user_name}\n"
            f"ü™™ID: {user_id}\n"
            f"üìÜ–î–∞—Ç–∞ –∞–∫–∫–∞—É–Ω—Ç–∞: {account_creation_date}\n"
            f"üñº–ê–≤–∞—Ç–∞—Ä: {avatar}\n"
            f"‚≠êPremium: {premium}\n"
            f"ü§ñ–ë–æ—Ç: {is_bot}\n"
            f"‚úÖ–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –∞–∫–∫–∞—É–Ω—Ç: {official_account}"
        )

        # –ü—É—Ç—å –¥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (–º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–π)
        photo_path = "images/actions/journey/magic-forest/4.png"  # –ú–æ–∂–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –ø—É—Ç—å –∫ —Å–≤–æ–µ–º—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—é

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º –≤ –æ–¥–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏
        await msg.reply_photo(photo=photo_path, caption=info_text)
    else:
        # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –æ—Ç–≤–µ—Ç–æ–º
        await msg.reply("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–≤–µ—Ç—å—Ç–µ –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ.")



def get_common_handlers() -> tuple[MessageHandler, ...]:
    return (
        MessageHandler(__bombs, filters=get_filter('bombs')),
        MessageHandler(__night, filters=get_filter('night')),
        MessageHandler(__stupid, filters=get_filter('stupid')),
        MessageHandler(__compli, filters=get_filter('compli')),
        MessageHandler(__pidor, filters=get_filter('pidor')),
        MessageHandler(__prefix, filters=get_filter('prefix')),
        MessageHandler(__help, filters=get_filter('help')),
        MessageHandler(__info, filters=get_filter('–∏–Ω—Ñ–æ')),
        MessageHandler(__naxyi, filters=get_filter('–ø–æ—Å–ª–∞—Ç—å')),
        MessageHandler(__get, filters=get_filter('get')),
        MessageHandler(__info, filters=get_filter('info')),
        MessageHandler(__bagger_fast, filters=get_filter('nb')),

        *_get_game_handlers(),
        *_get_text_handlers(),
        *_get_sticker_handlers(),
    )
